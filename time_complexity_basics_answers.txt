Exercises

1. Time complexity is a function that estimates how long it takes an algorithm to run in relate to the amount of input.

2. Runtime is the time that an algorithm takes to run, and can be used with time complexity interchangeably.

3. It's the sum of the time that each instruction of an algorithm takes to run.

4. The 6 algorithm growth rates, in order of fastest to slowest, are
  constant: O(1)
  logarithm: O(log n)
  linear: O(n)
  log-linear: O(n log n)
  quadratic: O(n^2)
  exponential: O(2^n)
  factorial: O(n!)

5. In a coffee shop, when there's only 1 staff, it takes n time for each customer visits and makes a purchase. When there are m staffs, it takes n/m time. Throw away 1/m in front of n, the time complexity for a coffee shop to serve coffee for all customers is O(n).

6. O(n)

7. O(n^2)

8. O(2^n)

9. Most time efficient is O(n) the linear growth rate.
